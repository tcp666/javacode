
1，为什么要有软件测试
    1，软件测试职位本身的简直
    2，测试人员能够更好的测试更专业，
    3，是软件质量保证的一部分
  那些人需要了解软件测试
    用户
    项目经理
    程序员
    测试员
2，课程主要内容
    软件测试
    ******************************
    TMM:软件测试能力成熟度
        1初级阶段：
        2定义阶段：
        3集成阶段：
        4管理与测量：可测量和量化
        5最佳化：建立缺陷预防思想
    软件成熟能力成熟度：
            CMM是一种用于评价软件承包能力并帮助其改善软件质量的方法，侧重于软件开发过程的管理及工程能力的提高与评估。CMM分为五个等级：一级为初始级，二级为可重复级，三级为已定义级，四级为已管理级，五级为优化级。
            CMM/CMMI将软件过程的成熟度分为5个等级,以下是5个等级的基本特征：
            (1)初始级(initial)。工作无序，项目进行过程中常放弃当初的计划。管理无章法，缺乏健全的管理制度。开发项目成效不稳定，项目成功主要依靠项目负责人的经验和能力，他一但离去，工作秩序面目全非。
            (2)可重复级(Repeatable)。管理制度化，建立了基本的管理制度和规程，管理工作有章可循。 初步实现标准化，开发工作比较好地按标准实施。 变更依法进行，做到基线化，稳定可跟踪，新项目的计划和管理基于过去的实践经验，具有重复以前成功项目的环境和条件。
            (3)已定义级(Defined)。开发过程，包括技术工作和管理工作，均已实现标准化、文档化。建立了完善的培训制度和专家评审制度，全部技术活动和管理活动均可控制，对项目进行中的过程、岗位和职责均有共同的理解 。
            (4)已管理级(Managed)。产品和过程已建立了定量的质量目标。开发活动中的生产率和质量是可量度的。已建立过程数据库。已实现项目产品和过程的控制。可预测过程和产品质量趋势，如预测偏差，实现及时纠正。
            (5)优化级(Optimizing)。可集中精力改进过程，采用新技术、新方法。拥有防止出现缺陷、识别薄弱环节以及加以改进的手段。可取得过程有效性的统计数据，并可据进行分析，从而得出最佳方法。

    软件缺陷
    用例
    质量

    方法：
        白盒，
        黑盒
    测试用例
************************************
    软件测试(软件需求阶段就开始加入)
        手动或手动运行或测试系统的过程。
        自动使用工具，以验证是否
        满足要求或澄清差异
       实际结果与预期结果之间的关系。
软件测试与需求
 谁定义
 谁分析
     测试如何了解需求--》需求规格说明书
     用户需求和需求规格有差异----》风险

  测试用例：设计--》预期--》运行---》输出对比
概念：
    软件则试是人工地，或通过使用工具来自动地运行被测软件系统
    ，或静态检查被测系统的过程，其目的在于校验被测系统是否满足需求，
    或要弄清楚实际的系统输出与预期系统输出之间的差异


软件测试：
    ●根本目的:确保被测系统符合用户需求
    ●基本手段:设计测试用例
    ●执行方式:手工/自动化
    ●测试策略:动态运行/静态审阅
    ●通用流程:计划、设计、实施、评估。

软件缺陷：BUG
    1,软件测试员认为软件难以理解、不易
    使用、运行速度缓慢，或者最终用户认
    为不好，则是缺陷。
    2.软件未达到需求规格说明书中指明的
     功能，则是缺陷。
     检查正常功能、正常流程
     检查性能
    3.软件出现了需求规格说朋书中指明不
      观着
      会出现的错误，则是缺陷。
      检查异常情况
      检查无效用户输入的识别能力
      检查无效用户输入的处理能力
    4.软件功能超出需求规格说明书中指明
     的范围，则是缺陷。
     无意加入，过错缺陷.
     人为加入，需求缺陷
    5.软件未达到需求规格说明书中虽未指
     出但应达到的目标，则是缺陷。
     隐含特性，需求缺陷




测试目标
    ●基于风险最低、效率最高、分而治之的测试设计原则
    ●测试用例就是
    5能代表需求的小的测试单元
    描述用户预期输出
    反映系统实际执行结果

测试用例的组成
    输入+输出+测试+环境=测试用例
        ●输入:测试数据和操作步骤。
        ●输出:系统预期执行结果。
        ●测试环境:是系统环境设置，即进行软件测试所必需的
        工作平台和前提条件。
测试的分类：
   不同角度的测试分类
   (1) 从测试阶段或对象的角度，可以分为单元测试、
   集成测试、系统测试和验收测试;
   (2)从测试技术的角度，可以分为黑盒测试、白盒测
   试和灰盒测试;
   (3)从测试目标的角度，可以分为更多的测试类型，
   包括回归测试、功能测试、性能测试、Alpha测 试、
   Beta测试、压力测试、负 载测试、安全性测试、配 置测
   试、安装测试、可用性测试、可恢复性测试等。
   (4) 从测试执行方式的角度，可以分为手动测试、自
   动化测试和半自动化测试。

软件质量：
    质量：
      ●Philip B. Crosby，克劳斯比，美国质量管理
      578499233正在观看仅本人可见)
      专家，零缺陷之父。
      ●质量是产品符合规定要求的程度
      从生产者角度出发
      ●使用要求:即用户需求，应准确、清晰地
      表达，多样化、动态化的用户需求。
      ●满足程度:应通过一定手段、借助工具进
      行定期测量。
      ●提供标准:应有标准来衡量产品与需求的一致程度。
        **************

●实体
    实体是质量的主体，即测量的主体。
    -般指产品，也可以是活动、过程、组织、
    人，或者它们的组合。
    ●特性集合
    表示度量
    特性必须可以测量，定性或定量方式得到指
    导性结论。
    ●需求

软件质量：
    ●反映软件满足明确或隐含需要能力的特性总和。
    ●客观而言，软件质量是软件具有某种能力的属性，这
    是前提条件。
    ●主观而言，软件具有的能力对应不同层次的用户需求。

不同层次的用户需求
    显式需求
        需求规格说明书
        描述的内容
        是软件内部质量
        开发者将用户需求具体化，以此开发软件，
        这是获得产品质量的基本途径。
     隐式需求
            未在需求规格说
            明书中明确描述
            用户明确说明的
            目标
            ●反映验收质量
    实际需求
        软件的使用质量
        ●用户在实际使用
        过程中对产品的
        质量评价


狭义和广义的软件质量
    ●John Guaspari (“I know it when I see it:
    a modern fable about quality
    ”，1985):
    客户并不只是购买了一件产品，他们购买
    的是你的保证。
    ●狭义的软件质量:软件的内部质量，即软件无“故障
    。
    ●广义的软件质量:产品质量、过程质量和客户满意度。



**************************************************

欢迎继续学习《软件测试与质量》课程。
    本周我们将讨论课程的第二二部分技术篇。 在这一部分， 我们主要围绕第2章黑盒测
    试技术和第3章白盒测试技术来展开讨论。其中，本周和下周将讨论黑盒测试中的一些重
    要的测试方法。
    本周主要回答如下问题:
    ●什么是黑盒测试?
        只知道系统输入和预期输出，不需要了解程序内部
        结构和内部特性的测试方法就称为黑盒测试。


       1.黑盒测试的优势
        ●方法简单有效
        ●可以整体测试系统的行为
        ●开发与测试可以并行
        ●对测试人员技术要求相对较低
        缺点：
            入门门槛低：

            黑盒测试的经济学问题.
            ●通过测试无法证明，被测软件系统是没
            有缺陷的。
            ●软件测试的经济学问题。
                应对策略一:黑盒测试。
                穷尽输入测试可行吗?
黑盒测试的经济学问题
    ●软件测试是不完备的
    ●软件测试是有风险的
    ●测试设计应达到的目标


    测试方法的评价标准
        在最短时间内，以最少的人力，有利于发现最多的，以及最
        严重的缺陷。
        ●精确的:测试针对性强.
        ●完备的:测试覆盖全面，无漏洞
        ●无冗余
        ●简单的:测试方法简单易行
        ●易于调试:缺陷定位难度小
        本质：
           测试方法的评价标准

           测试方法的评价
           ●测试用例的覆盖度:高
           覆盖什么?→需求
           ●测试以需求为中心
           ●测试用例设计以需求为中心
           ●测试用例应覆盖功能需求
           ●测试用例应覆盖高风险
        ###############




基本原理：
    任何程序都可以被看做是从其输入域到输出域的映
    射。
    卜对程序功能的理解仅基于输入和输出，对其实现原
    理和过程一无所知。
边界值测试：
产生的原因
    ●经过长期的测试工作经验表明，在输入域的边界或边界
    附近，
    常常会发现大量缺陷。
    ●边界值测试倾向于选择系统边界或边界附近的数据来设
    计测试用例。

    要解决的问题
    ●边界在哪里?
    ●如何定义边界的邻域?
    ●如何选择测试数据?
    ●如何设计测试用例?

等价类测试：










场景测试：

    ●如何对测试方法进行评价?
            ●测试用例的覆盖度:高
            ●测试用例的数量:少
            ●测试用例的冗余度:低
            ●测试用例的缺陷定位能力:高

    ●如何围绕被测系统边界展开测试用例设计?
    ●如何基于等价划分的思想， 使用有限的测试用例达到穷尽测试的目标?
    ●如何面向业 务流程实现场景测试?













