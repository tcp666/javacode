<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!--    spring中的依赖注入
        依赖注入：
        dependency injection
        ioc的作用：
           降低程序间的依赖关系（依赖关系）（并不是没有依赖）
           依赖关系的管理：
               以后都交给spring来维护
            在当前类需要用到其他类的对象，有spring为我们提供。，我们只需要在配置文件中说明
            依赖关系的维护：
               就称之为依赖注入
            依赖注入：
            依赖注入的数据：有三类
            String
            其他的bean类型
            复杂类型
            方式：
            1，使用构造函数提供
            2，使用set方法提供
            3，使用注解提供

    -->

    <!--    构造函数注入
            使用的标签：
            constructor-arg
            type:指定注入的数据类型
            index:指定位置的参数
            name：用于指定给构造函数中指定名称的参数负值
            =========
            以上给那个参数赋值
            value：给基本类型赋值
            ref：指定其他的bean类型的数据，就是springIOC容器中出现过的对象
            优势：

            弊端：
            改变了bean的实例化方式
    -->
    <bean id="accountService" class="com.itheima.service.imp.AccountServiceImp">
        <constructor-arg name="name" value="泰斯特"></constructor-arg>
        <constructor-arg name="age" value="19"></constructor-arg>
        <constructor-arg name="birthday" ref="now"></constructor-arg>
    </bean>
    <bean id="now" class="java.util.Date"></bean>


    <!--    set方法注入
       标签：
       property
           name：用于指定给构造函数中指定名称的参数负值
            =========
            以上给那个参数赋值
            value：给基本类型赋值
            ref：指定其他的bean类型的数据，就是springIOC容器中出现过的对象
            优势：
            创建对象时没有明确的限制
            如果有某个成员必须有值时，有可能漏掉

    -->
    <bean id="accountService2" class="com.itheima.service.imp.AccountServiceImp2">
        <property name="age" value="19"></property>
        <property name="birthday" ref="now"></property>
        <property name="name" value="达芬奇"></property>
    </bean>
    <!--集合类型注入
        用于给list集合注入的有：list array set
        用于给Map结构注入的标签有：map props
        结构相同标签可以互换


    -->
    <bean id="accountService3" class="com.itheima.service.imp.AccountServiceImp3">
        <property name="mystrs">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>

        <property name="mylist">
            <list>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </list>
        </property>

        <property name="myset">
            <set>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </set>
        </property>

        <property name="mymap">
            <map>
                <entry key="aaa" value="AAA"></entry>
                <entry key="CCC" value="ccc"></entry>
            </map>
        </property>

        <property name="myprops">
            <props>
                <prop key="tectp">
                    ffgsdfsgdfgsdfgs
                </prop>

                <prop key="tectdauhv" >
                    helloworld
                </prop>
            </props>
        </property>
    </bean>
</beans>