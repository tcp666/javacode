<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    配置spring的IOC把service对象配置进来-->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>

<!--    spring中基于xml的Aop配置步骤
           1，把通知Bean也交给spring来管理
           2,使用aop:Config标签表明开始Aop的配置
           3,使用aop:aspect表明配置切面
                id；给切面提供唯一标识
                ref:指定通知类bean的id.
            4,在aop:aspect标签的内部使用对应标签来配置通知的类型
                让printLog方法在切入点方法之前：所以是前置通知
                aop:before,表示前置通知
                        method属性：用于指定Logger类中那个方法是提前通知
                        pointcut属性：用于指定切入点表达式，该表达式的含义是对业务层中那些方法增强

                 切入点表达式的写法：
                 关键字：execution(表达式)
                 表达式 权限定方法名
                 public void com.itheima.service.impl.AccountServiceImpl.saveAccount()
                 访问修饰符可以省略
                 包名可以使用通配符表示，还可以使用..表示当前包和子包
                 类名和方法名都可以使用*表示
                   全通配 * *..*.*(..)

                  实际开发通常写：
                    切到业务层实现类下的所有方法：
                    * com.itheima.service.imp.*.*(..)

        -->

<!--
1，配置Logger类-->
  <bean id="logger" class="com.itheima.utils.Logger"></bean>

<!-- 配置Aop-->
    <aop:config>
        <!-- 配置切面 -->
        <aop:aspect id="logAdvice" ref="logger">
<!--            配置通知类型并且建立通知方法和切入点的关联-->
            <aop:before method="printLog" pointcut="execution(* com.itheima.service.impl.*.*(..))"></aop:before>
        </aop:aspect>
    </aop:config>

</beans>